Method 1->

#include<iostream>
#include<stdio.h>
#include<bits/stdc++.h>
using namespace std;

int partition(int arr[],int s,int e){
    int pivot=arr[s];
    int count=0;
    
    for(int i=s+1;i<=e;i++){
        if(arr[i]<=pivot){
            count++;
        }
    }
    
    int pivotindex=s+count;
    swap(arr[pivotindex],arr[s]);
    
    int i=s, j=e;
    
    while(i<pivotindex && j>pivotindex){
        while(arr[i] < pivot){
            i++;
        }
        
        while(arr[j] > pivot){
            j--;
        }
        if(i<pivotindex && j>pivotindex){
            swap(arr[i++],arr[j--]);
        }
    }
    
    return pivotindex;
}

void quicksort(int arr[],int s,int e){
    //base case
    if(s>=e){
        return;
    }
    
    int p=partition(arr,s,e);
    
    //left partition
    quicksort(arr,s,p-1);
    
    //right partition
    quicksort(arr,p+1,e);
}

int main(){
    
    int n;
    cin>>n;
    int arr[n];
    
    for(int i=0;i<n;i++){
        cin>>arr[i]; 
    }
    
    quicksort(arr,0,n-1);
    
    for(int i=0;i<n;i++){
        cout<<arr[i]<<" ";
    }
    return 0;
}

TC->O(n^2)
SC->O(1) //have to confirm
