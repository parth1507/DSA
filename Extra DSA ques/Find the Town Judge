Method 1->using two arrays

 int findJudge(int n, vector<vector<int>>& trust) {
        vector<int> outdegree(n+1,0);
        vector<int> indegree(n+1,0);

        for(auto vec: trust){
            int u=vec[0];
            int v=vec[1];

            outdegree[u]++;
            indegree[v]++;
        }

        for(int i=1;i<=n;i++){
            if(indegree[i]==n-1 && outdegree[i]==0){
                return i;
            }
        }

        return -1;
    }
  TC->O(N)
  SC->O(2N)
  
  Method 2->
  int findJudge(int n, vector<vector<int>>& trust) {
        vector<int> count(n+1,0);

        for(auto vec: trust){
            int u=vec[0];
            int v=vec[1];

            count[u]--;
            count[v]++;
        }

        for(int i=1;i<=n;i++){
            if(count[i]==n-1){
                return i;
            }
        }

        return -1;
    }
  TC->O(N)
  SC->O(N)
