Method 1-> recursion + memoization

int dp[10001];
    bool solve(vector<int>& nums,int n,int idx){
        //base case
        if(idx == n-1){
            return true;
        }

       if(dp[idx] !=- 1){
           return dp[idx];
       }
        
        for(int i=1;i<=nums[idx];i++){
            if(solve(nums,n,idx+i)==true){
                return dp[idx]=true;
            }
        }
        return dp[idx]=false;
    }
    bool canJump(vector<int>& nums) {
        int n=nums.size();
        memset(dp,-1,sizeof(dp));
        return solve(nums,n,0);
    }
  TC->O(N^2)
  SC->O(N^2)
