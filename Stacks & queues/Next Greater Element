Method 1-> brute force
vector<long long> nextLargerElement(vector<long long> arr, int n){
        for(int i=0;i<n;i++){
            int j=0;
            for(j=i+1;j<n;j++){
                if(arr[j]>arr[i]){
                    arr[i]=arr[j];
                    break;
                }
            }
            if(j==n){
                arr[i]=-1;
            }
        }
        return arr;
    }
  TC->O(N^2)
  SC->O(1)
  
  Method 2-> optimized approach using stack
  vector<long long> nextLargerElement(vector<long long> arr, int n){
        stack<long long> s;
        vector<long long> ans;
        for(int i=n-1;i>=0;i--){
            long long curr=arr[i];
            
            while(!s.empty() && curr>=s.top()){
                s.pop();
            }
            if(s.empty()){
                ans.push_back(-1);
            }
            else{
                ans.push_back(s.top());
            }
             s.push(curr);
            
        }
        reverse(ans.begin(),ans.end());
        return ans;
    }
    TC->O(N)
    SC->O(n)
