method 1-> recursive way

void solve(stack<int>&s,int count,int size){
    
        if(count==size/2){
            s.pop();
            return;
        }
        int num=s.top();
        s.pop();
        
        solve(s,count+1,size);
        s.push(num);
    }
    void deleteMid(stack<int>&s, int sizeOfStack)
    {
        int count=0;
        solve(s,count,sizeOfStack);
    }
   TC->O(N)
   SC->O(N)
   
   Method 2-> iterative method
   void deleteMid(stack<int>&s, int sizeOfStack)
    {
        stack<int> temp;
        int count=0;
        
        while(count < sizeOfStack/2){
            int ch=s.top();
            s.pop();
            temp.push(ch);
            count++;
        }
        s.pop();
        
        while(!temp.empty()){
            s.push(temp.top());
            temp.pop();
        }
    }
    TC->O(N)
    SC->O(N)
