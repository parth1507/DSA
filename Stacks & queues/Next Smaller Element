Method 1-> brute force
 vector<int> help_classmate(vector<int> arr, int n) 
    { 
        for(int i=0;i<n;i++){
            int j=0;
            for(j=i+1;j<n;j++){
                if(arr[i]>arr[j]){
                    arr[i]=arr[j];
                    break;
                }
            }
            if(j==n){
                arr[i]=-1;
            }
        }
        return arr;
    } 
TC->O(N^2)
SC->O(1)

Method 2-> optimized approach uding stacks
#include<stack>
vector<int> nextSmallerElement(vector<int> &arr, int n)
{
   stack<int> s;
   s.push(-1);
    vector<int> ans(n);
    
    for(int i=n-1;i>=0;i--){
        int curr=arr[i];
        
        while(s.top()>=curr){
            s.pop();
        }
        ans[i]=s.top();
        s.push(curr);
    }
    return ans;
}
TC->O(N)
SC->O(N)
