Example 1:

Input: points = [[10,16],[2,8],[1,6],[7,12]]
Output: 2
Explanation: The balloons can be burst by 2 arrows:
- Shoot an arrow at x = 6, bursting the balloons [2,8] and [1,6].
- Shoot an arrow at x = 11, bursting the balloons [10,16] and [7,12].
Example 2:

Input: points = [[1,2],[3,4],[5,6],[7,8]]
Output: 4
Explanation: One arrow needs to be shot for each balloon for a total of 4 arrows.

Method1->sort on basis of end points
static bool comp(vector<int> &a, vector<int> &b){
    return a[1] < b[1];
}

int findMinArrowShots(vector<vector<int>>& points) {
    if(points.size() == 0) return 0; 
	
    sort(points.begin(), points.end(), comp);
    int arrows = 1;
    int last = points[0][1];
    
    for(int i = 1; i < points.size(); i++){
        if(points[i][0] > last){
            arrows++;
            last = points[i][1];
        }
    }
    return arrows;
	}
  TC->O(nlogn)
  SC->O(1)
