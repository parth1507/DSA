Example 1:

Input:
N = 2
start[] = {2, 1}
end[] = {2, 2}
Output: 
1
Explanation:
A person can perform only one of the
given activities.
Example 2:

Input:
N = 4
start[] = {1, 3, 2, 5}
end[] = {2, 4, 3, 6}
Output: 
3
Explanation:
A person can perform activities 1, 2
and 4.

Method 1->
static bool comp(pair<int,int>a,pair<int,int>b){
        if(a.second==b.second) return a.first<b.first;
        return a.second<b.second;
    }
    int activitySelection(vector<int> start, vector<int> end, int n)
    {
        // Your code here
        vector<pair<int,int>>v(n);
        for(int i=0;i<n;i++) v[i]={start[i],end[i]};
         sort(v.begin(),v.end(),comp);
         int i=0;
         int j=1;
         int count=1;
         while(j<n){
             if(v[i].second<v[j].first){
                 count++;
                 i=j;
                 j++;
             }
             else j++;
         }
         return count;
    }
    TC->O(nlogn)
    SC->O(n)
