Method 1-> greedy
long long int findMaxProduct(vector<int>&a, int n){
        //Write your code here  
        long long int zero_count=0;
        long long int negative_count=0;
        long long int prod=1;
         int max_negative=INT_MIN;
         long long int m=1e9+7;
        
        if(n==1) return a[0];
        for(int i=0;i<n;i++){
            if(a[i]==0){
             zero_count++;
            continue;
            }
            if(a[i]<0){
                negative_count++;
                max_negative=max(max_negative,a[i]);
            }
            prod=((prod%m)*(a[i]%m)%m);
        }
        if(zero_count==n) return 0;
        else if(negative_count==1 && zero_count+negative_count==n) return 0;
        else if(negative_count%2!=0){
            prod=prod/max_negative;
        }
        return prod;
    }
    TC->O(n)
    SC->O(1)
