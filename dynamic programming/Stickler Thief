Method 1-> using tabulation method

int FindMaxSum(int arr[], int n)
    {
        // Your code here
        if(n<=0) return 0;
        if(n==1) return arr[0];
        if(n==2) return max(arr[0],arr[1]);
        
        int dp[n];
        dp[0]=arr[0];
        dp[1]=max(arr[0],arr[1]);
        
        for(int i=2;i<n;i++){
            dp[i]=max(arr[i]+dp[i-2],dp[i-1]);
        }
        return dp[n-1];
    }
  TC->O(n)
  SC->O(n)
  
  Method 2->space optimization
  int FindMaxSum(int arr[], int n)
    {
        // Your code here
       
       if(n==0) return 0;
       
       int value1=arr[0];
       if(n==1) return value1;
       
       int value2=max(arr[0],arr[1]);
       if(n==2) return value2;
       
       int max_val=INT_MIN;
       for(int i=2;i<n;i++){
           max_val=max(arr[i]+value1,value2);
           value1=value2;
           value2=max_val;
       }
       return max_val;
    }
    TC->O(n)
    SC->O(1)
  
