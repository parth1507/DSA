Example 1:

Input:
R=4
C=5
M=[[1,2,-1,-4,-20],
[-8,-3,4,2,1],
[3,8,10,1,3],
[-4,-1,1,7,-6]]
Output:
29
Explanation:
The matrix is as follows and the
blue rectangle denotes the maximum sum
rectangle.

Method 1-> DP
long long int kadane(vector<long long int>temp,int n){
      long long int maxsum=INT_MIN,cursum=0;
      for(int i=0;i<n;i++){
          cursum+=temp[i];
          maxsum=max(maxsum,cursum);
          cursum=(cursum<0)?0:cursum;
      }
      return maxsum;
  }
    int maximumSumRectangle(int R, int C, vector<vector<int>> M) {
        // code here
        long long int maxsum=INT_MIN;
        for(int i=0;i<C;i++){
            vector<long long int>temp(R,0);
            for(int j=i;j<C;j++){
                for(int k=0;k<R;k++){
                    temp[k]+=M[k][j];
                }
                long long int sum=kadane(temp,R);
                if(maxsum<sum){
                    maxsum=sum;
                }
            }
        }
        return maxsum;
    }
    TC->O(R*C*C)
    SC->O(C)
