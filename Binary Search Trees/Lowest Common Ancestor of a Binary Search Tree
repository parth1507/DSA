Method 1-> Recursive way
TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
        if(root==NULL) return NULL;

        int curr=root->val;
        if(curr < p->val && curr < q->val){
            return lowestCommonAncestor(root->right,p,q);
        }
        if(curr > p->val && curr > q->val){
            return lowestCommonAncestor(root->left,p,q);
        }
        return root;
    }
  
  TC->O(Height of tree)
  SC->O(n)
  
 Method 2-> Iterative way
 Node* LCA(Node *root, int n1, int n2)
{
   if(root==NULL){
       return NULL;
   }
   
   while(root!=NULL){
       if(root->data > n1 && root->data > n2){
           root=root->left;
       }
       else if(root->data < n1 && root->data < n2){
           root=root->right;
       }
       else{
           return root;
       }
   }
}
TC->O(H)
SC->O(1)
