Method 1-> 
 int firstUniqChar(string s) {
        int n=s.length();
        vector<int> frequency(26,0);
        
        for(int i=0;s[i]!='\0';i++){
            frequency[s[i]-'a']++;
        }
        for(int i=0;s[i]!='\0';i++){
            if(frequency[s[i]-'a']==1){
                return i;
                break;
            }
        }
        return -1;
    }
  TC->O(n)
  SC->O(1)
  
  Method 2->using hashmap
  int firstUniqChar(string s) {
        unordered_map<char,int> m;
        int n=s.length();
        
        for(int i=0;i<n;i++){
            m[s[i]]++;
        }
        for(int i=0;i<n;i++){
            if(m[s[i]]==1){
                return i;
                break;
            }
        }
        return -1;
    }
   TC->O(n)
   SC->O(n)
