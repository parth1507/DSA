Method 1->Binary Search

 bool isPossible(int A[],int N,int M,int mid){
        int studentCount=1;
        int pagesum=0;
        
        for(int i=0;i<N;i++){
            if(pagesum+A[i]<=mid){
                pagesum+=A[i];
            }
            else{
                studentCount++;
                if(studentCount>M || A[i]>mid){
                    return false;
                }
               pagesum=A[i];
            }
        }
        return true;
    }
    int findPages(int A[], int N, int M) 
    {
        int s=0;
        int sum=0;
        
        for(int i=0;i<N;i++){
            sum+=A[i];
        }
        int e=sum;
        int ans=-1;
        
        while(s<=e){
            int mid=s+(e-s)/2;
            if(isPossible(A,N,M,mid)){
                ans=mid;
                e=mid-1;
            }
            else{
                s=mid+1;
            }
            
        }
        return ans;
    }
    
   TC->O(nlogn)
   SC->O(1)
