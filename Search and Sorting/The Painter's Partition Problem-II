Method 1->Binary Search
class Solution
{
  public:
   bool isPossible(int arr[],int n,int k,int mid){
      long long int painterCount=1;
      long long int allocation=0;
       
       for(int i=0;i<n;i++){
           if(allocation+arr[i]<=mid){
               allocation+=arr[i];
           }
           else{
               painterCount++;
               if(painterCount>k || arr[i]>mid){
                   return false;
               }
               allocation=arr[i];
           }
       }
       return true;
   }
    long long minTime(int arr[], int n, int k)
    {
        // code here
        // return minimum time
        long long int s=0;
        long long int sum=0;
        for(int i=0;i<n;i++){
            sum+=arr[i];
        }
       long long int e=sum;
       long long int ans=-1;
        
        while(s<=e){
            int mid=s+(e-s)/2;
            if(isPossible(arr,n,k,mid)){
                ans=mid;
                e=mid-1;
            }
            else{
                s=mid+1;
            }
        }
        return ans;
    }
};
TC->O(nlogm)
SC->O(1)
