Method 1->Binary Search
bool isPossible(vector<int>& bloomDay, int m, int k,int mid){
        int bouquets=0,total=0;
        
        for(int i=0;i<bloomDay.size();i++){
            if(bloomDay[i]<=mid){
                total++;
                if(total==k){
                    bouquets++;
                    total=0;
                }
            }
            else total=0;
        }
        return bouquets>=m;
    }
    int minDays(vector<int>& bloomDay, int m, int k) {
        if((m*k)>bloomDay.size()) return -1;
        int s=1;
        int e=*max_element(bloomDay.begin(),bloomDay.end());
        int ans=-1;
        
        while(s<=e){
            int mid=s+(e-s)/2;
            if(isPossible(bloomDay,m,k,mid)){
                ans=mid;
                e=mid-1;
            }
            else{
                s=mid+1;
            }
        }
        return ans;
    }
    TC->O(nlogm)
    SC->O(1)
