Method 1->
bool findPair(int arr[], int size, int n){
    //code
    sort(arr, arr+size);
    int i=0, j=1;
    while(i<size && j<size)
    {
        if( (i!=j)&&((arr[j]-arr[i])==n))
            return true;
        else if((arr[j]-arr[i])>n)
            i++;
        else
            j++;
    }
    return false;
}
TC->O(nlogn)
SC->O(1)

Method 2-> using hashmap
bool findPair(int arr[], int size, int n){
    //code
     unordered_map<int,int>mp;
    for(int i=0;i<size;i++)
    {
     // two cases: when arr[i] is greater or arr[j] is greater
        auto itr1 =mp.find(arr[i]+n);
        auto itr2 = mp.find(arr[i]-n);
        if(itr1!=mp.end() || itr2!=mp.end()) return true;
        mp[arr[i]] = i;
    }
    return false;
}
TC->O(Nlogn)
SC->O(n)
