Method 1-> using recursion
void preorder(TreeNode* root, vector<int> &ans){
        if(root==NULL){
            return;
        }
        ans.push_back(root->val);
        preorder(root->left,ans);
        preorder(root->right,ans);
    }
    vector<int> preorderTraversal(TreeNode* root) {
        vector<int> ans;
        
        preorder(root,ans);
        return ans;
    }
  TC->O(n)
  SC->O(n)

Method 2->iterative method
vector <int> preorder(Node* root)
{
  vector<int> ans;
  if(root==NULL) return ans;
  
  stack<Node*> st;
  st.push(root);
  
  while(!st.empty()){
      root=st.top();
      st.pop();
      
      ans.push_back(root->data);
      if(root->right!=NULL){
          st.push(root->right);
      } 
      if(root->left!=NULL){
          st.push(root->left);
      }
  }
  return ans;
}
TC->O(n)
SC->O(n)
