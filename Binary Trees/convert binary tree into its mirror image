Method 1->
void mirror(Node* node) {
        if(node==NULL){
            return;
        }
        if(node->left==NULL && node->right==NULL){
            return;
        }
        
        mirror(node->left);
        mirror(node->right);
        
        Node* temp;
        temp=node->left;
        node->left=node->right;
        node->right=temp;
    }
 TC->O(N)
 SC->O(N)

Method 2->
TreeNode* invertTree(TreeNode* root) {
        if((root==NULL) || (root->left==NULL && root->right==NULL)){
            return root;
        }
        invertTree(root->left);
        invertTree(root->right);
        
        swap(root->left,root->right);
        return root;
    }
  TC->O(N)
  SC->O(N)
