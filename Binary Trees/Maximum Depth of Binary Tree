Method 1->recursive way

int maxDepth(TreeNode* root) {
        //base case
        
        if(root==NULL){
            return 0;
        }
        
        int left=maxDepth(root->left);
        int right=maxDepth(root->right);
        
        int ans=max(left,right)+1;
        
        return ans;
    }
  TC->O(n)
  SC->O(n)
  
  Method 2->iterative way
   int maxDepth(TreeNode* root) {
         int depth = 0;
        
        if (root == NULL) return depth;
        
        queue<TreeNode*> q;
        q.push(root);
        
        while (!q.empty()) {
            int size = q.size();
            depth++;
            for (int i = 0; i < size; i++) {
                TreeNode* temp = q.front();
                q.pop();
                if (temp -> left != NULL) q.push(temp -> left);
                if (temp -> right != NULL) q.push(temp -> right);
            }
        }
        
        return depth;
    }
   TC->O(n)
   SC->O(n)
