Method 1->
int isSumProperty(Node *root)
    { 
        int sum=0;
        if(root==NULL){
            return 1;
        }
        if(root->left==NULL && root->right==NULL){
            return 1;
        }
        if(root->left!=NULL){
            sum+=root->left->data;
        }
        if(root->right!=NULL){
            sum+=root->right->data;
        }
        
        if(sum==root->data && isSumProperty(root->left)==1 && isSumProperty(root->right)==1){
         return 1;
        }     
        return 0;
    }
  TC->O(n)
  SC->O(h)
  
  Method 2->
  int isSumProperty(Node *root)
    { 
        if(!root || (!root->left && !root->right)) return 1;
        int l = (root->left)? root->left->data: 0;
        int r = (root->right)? root->right->data: 0;
        if(root->data != (l+r)) return 0;
        return isSumProperty(root->left) && isSumProperty(root->right);
    }
    TC->O(N)
    SC->O(h)
