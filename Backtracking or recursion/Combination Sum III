Method 1->
void solve(int index,int k,int n,int sum,vector<vector<int>> &ans,vector<int> ds){
        //base case
        if(sum==n && k==0){
            ans.push_back(ds);
            return;
        }
        
        for(int i=index;i<=9;i++){
            ds.push_back(i);
            solve(i+1,k-1,n,sum+i,ans,ds);
            ds.pop_back();
        }
    }
    vector<vector<int>> combinationSum3(int k, int n) {
        vector<vector<int>> ans;
        vector<int> ds;
        int sum=0;
        
        solve(1,k,n,sum,ans,ds);
        return ans;
    }
    TC->O(n*2^n)
    SC->O(n)
