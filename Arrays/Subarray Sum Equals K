Method 1-> brute force
int subarraySum(vector<int>& nums, int k) {
      int n=nums.size();
       int count=0;
        
       for(int i=0;i<n;i++){
           int sum=0;
           for(int j=i;j<n;j++){
               sum+=nums[j];
               
               if(sum==k) count++;
           }
       } 
        return count;
    }
  TC->O(n^2)
  SC->O(1)
  
  Method 2-> prefix sum
  int subarraySum(vector<int>& nums, int k) {
        int n=nums.size();
        int sum=0;
        int count=0;
        unordered_map<int,int> prevSum;
        
        for(int i=0;i<n;i++){
            sum+=nums[i];
            
            if(sum==k) count++;
            
            if(prevSum.find(sum-k)!=prevSum.end()){
                count+=prevSum[sum-k];
            }
            prevSum[sum]++;
        }
        return count;
    }
   TC->O(N)
   SC->O(N)
