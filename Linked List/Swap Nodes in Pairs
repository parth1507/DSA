Method 1->using recursion

ListNode* swapPairs(ListNode* head) {
        if(head==NULL) return NULL;
        if(head->next==NULL){
            return head;
        }
        
        ListNode* curr=head;
        ListNode* prev=NULL;
        ListNode* next=NULL;
        int count=0;
        
        while(curr!=NULL && count<2){
            next=curr->next;
            curr->next=prev;
            prev=curr;
            curr=next;
            count++;
        }
        if(next!=NULL){
            head->next=swapPairs(next);
        }
        return prev;
    }
   TC->O(n)
   SC->O(1) if recursion stack not considered 
   
   Method 2-> iterative method;
   ListNode* swapPairs(ListNode* head) {
        if(head==NULL) return NULL;
        if(head->next==NULL) return head;
        
        ListNode* dummy=new ListNode(-1);
        dummy->next=head;
        ListNode* curr=head;
        ListNode* prev=dummy;
        
        while(curr!=NULL && curr->next!=NULL){
            prev->next=curr->next;
            curr->next=curr->next->next;
            prev->next->next=curr;
            prev=prev->next->next;
            curr=curr->next;
        }
        return dummy->next;
    }
    TC->O(n)
    SC->O(1)
