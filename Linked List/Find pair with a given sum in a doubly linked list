Method 3->
bool findPair(Node* head, int k)
{
   Node* ptr1=head;
   Node* ptr2=head;
    while(ptr2->next!=NULL){
        ptr2=ptr2->next;
    }
    
    while(ptr1!=ptr2 && ptr2->next!=ptr1){
        if(ptr1->data+ptr2->data==k){
            return true;
            ptr1=ptr1->next;
            ptr2=ptr2->prev;
        }
        else if(ptr1->data+ptr2->data>k){
            ptr2=ptr2->prev;
        }
        else{
            ptr1=ptr1->next;
        }
    }
    return false;
}
TC->O(n)
SC->O(1)

Method 3->
vector<pair<int, int>> findPairsWithGivenSum(Node *head, int target)
    {
        // code here
        Node* ptr1=head;
        Node* ptr2=head;
        vector<pair<int,int>>ans;
        
        while(ptr2->next!=NULL){
            ptr2=ptr2->next;
        }
        while(ptr1!=ptr2 && ptr2->next!=ptr1){
            if(ptr1->data+ptr2->data==target){
                ans.push_back({ptr1->data,ptr2->data});
                ptr1=ptr1->next;
                ptr2=ptr2->prev;
            }
            else if(ptr1->data+ptr2->data > target){
                ptr2=ptr2->prev;
            }
            else{
                ptr1=ptr1->next;
            }
        }
        return ans;
    }
   TC->O(n)
   SC->O(1)
