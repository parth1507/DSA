Method 1-> naive approach
 Node* segregate(Node *head) {
        
        // Add code hereif
        if(head==NULL) return NULL;
        if(head->next==NULL) return head;
        
        Node* temp=head;
        int countZero=0;
        int countOne=0;
        int countTwo=0;
        
        while(temp!=NULL){
            if(temp->data==0) countZero++;
            else if(temp->data==1) countOne++;
            else if(temp->data==2) countTwo++;
            
            temp=temp->next;
        }
        
        temp=head;
        while(temp!=NULL){
            if(countZero!=0){
                temp->data=0;
                countZero--;
            }
            else if(countOne!=0){
                temp->data=1;
                countOne--;
            }
            else if(countTwo!=0){
                temp->data=2;
                countTwo--;
            }
            temp=temp->next;
        }
        return head;
        
    }
   TC->O(n)
   SC->O(1)
   
  method 2->optimized approach
  
